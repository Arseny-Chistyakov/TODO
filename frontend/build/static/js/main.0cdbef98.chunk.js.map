{"version":3,"sources":["components/User.js","components/Project.js","components/TODO.js","components/Footer.js","components/Menu.js","components/NotFound404.js","components/Auth.js","components/ProjectCreateForm.js","components/ProjectUpdateForm.js","components/TODOCreateForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","_ref","user","react_default","a","createElement","username","firstName","lastName","email","created","modified","UserList","_ref2","users","className","Array","isArray","map","User_UserItem","key","uid","ProjectItem","project","delete_project","update_project","react_router_dom","to","concat","name","repository","creatorsProject","join","onClick","type","ProjectList","projects","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","filteredData","filter","input","document","getElementById","value","toLowerCase","includes","placeholder","id","onChange","event","lowerCase","target","Project_ProjectItem","ProjectDetail","_ref3","detailedProjectId","useParams","filteredProject","href","index","TODOItem","TODO","delete_TODO","body","creatorKeep","isActive","TODOList","TODOs","TODO_TODOItem","Footer","NavbarItem","Navbar","navbarItems","auth","logout","login_button","is_login","data-toggle","data-target","aria-controls","aria-expanded","aria-label","item","NotFound404","pageLocation","useLocation","pathname","LoginForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","password","setState","defineProperty","preventDefault","_this2","onSubmit","handleSubmit","htmlFor","handleChange","React","Component","ProjectCreateForm","selectedOptions","i","length","push","create_project","window","location","multiple","handleCreatorsProjectChange","ProjectUpdateForm","num","projectUid","replace","split","splice","nextProps","updateState","forEach","_this3","TODOCreateForm","create_TODO","get_url","url","App","headers","get_headers","data","axios","post","then","response","load_data","catch","error","console","log","put","_this4","delete","_this5","_this6","Content-Type","token","localStorage","getItem","_this7","result","access","refresh","setItem","status","alert","_this8","get","results","_this9","_this10","role","react_router","exact","path","element","Auth","User","components_TODO","components_TODOCreateForm","Project_ProjectList","Project_ProjectDetail","components_ProjectCreateForm","components_ProjectUpdateForm","components_NotFound404","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.0cdbef98.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td>{user.username}</td>\r\n            <td>{user.firstName}</td>\r\n            <td>{user.lastName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.created}</td>\r\n            <td>{user.modified}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table table-hover mt-3\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Логин</th>\r\n                    <th>Имя</th>\r\n                    <th>Фамилия</th>\r\n                    <th>Email</th>\r\n                    <th>Создан</th>\r\n                    <th>Изменен</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Array.isArray(users) ? users.map((user) => <UserItem user={user} key={user.uid}/>) : null}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList","import React, {useState} from 'react'\r\nimport {Link, useParams} from \"react-router-dom\";\r\n\r\nconst ProjectItem = ({project, delete_project, update_project}) => {\r\n    return (\r\n        <tr>\r\n            <td><Link to={`${project.uid}`} className={\"table-link\"}>{project.name}</Link></td>\r\n            <td>{project.repository}</td>\r\n            <td>{project.creatorsProject.join(\", \")}</td>\r\n            <td>\r\n                <button onClick={() => delete_project(project.uid)} type='button' className={\"btn btn-secondary\"}>\r\n                    Удалить\r\n                </button>\r\n            </td>\r\n            <td>\r\n                <button type='button' className={\"btn btn-secondary\"}>\r\n                    <Link onClick={() => update_project(project.uid)} to={`update/${project.uid}`}\r\n                          className={\"text-decoration-none text-white\"}>Обновить</Link>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProjectList = ({projects, delete_project}) => {\r\n    const [inputValue, setInputValue] = useState();\r\n    const handleChange = (event) => {\r\n        let lowerCase = event.target.value.toLowerCase();\r\n        setInputValue(lowerCase);\r\n    };\r\n    const filteredData = projects.filter((projects) => {\r\n            let input = document.getElementById(\"input\");\r\n            let inputVal = ''\r\n            if (input) {\r\n                inputVal = input.value\r\n            } else {\r\n                inputVal = ''\r\n            }\r\n            if (inputVal === '') {\r\n                return projects;\r\n            } else {\r\n                return (projects.name.toLowerCase().includes(inputValue))\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={\"mt-4 d-flex justify-content-center\"}>\r\n                <input type={\"search\"} placeholder=\"Поиск по имени проекта\" id=\"input\" value={inputValue}\r\n                       onChange={handleChange}/>\r\n                <button className={\"btn btn-secondary ml-5\"}>\r\n                    <Link to=\"/projects/create\" className={\"text-decoration-none text-white\"}>Создать проект</Link>\r\n                </button>\r\n            </div>\r\n            <table className=\"table table-hover mt-3\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Название проекта</th>\r\n                    <th>Репозитории</th>\r\n                    <th>Создатели проекта</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Array.isArray(filteredData) ? filteredData.map((project) => <ProjectItem project={project}\r\n                                                                                          delete_project={delete_project}\r\n                                                                                          key={project.uid}/>) : null}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProjectDetail = ({projects}) => {\r\n    let detailedProjectId = useParams()\r\n    let filteredProject = projects.filter((project) => project.uid === detailedProjectId.id)[0]\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <div className={\"d-flex justify-content-center\"}>\r\n                <div className={\"card shadow-lg border-0 rounded-lg mt-5\"}>\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"text-center my-2\">\r\n                            Название проекта: {filteredProject.name}</h3>\r\n                    </div>\r\n                    <div className={\"card-body text-left\"}>\r\n                        <p className=\"card-text \">Ссылка на проект:\r\n                            <a className={\"table-link\"} href={filteredProject.repository}>\r\n                                {filteredProject.repository}</a>\r\n                        </p>\r\n                        <div className={\"form-group\"}>\r\n                            <label className={\"mb-2 card-text text-decoration-underline\"}>Список разработчиков\r\n                                проекта:</label>\r\n                            {filteredProject.creatorsProject.map((creatorsProject, index) => {\r\n                                return (\r\n                                    <p className=\"card-text\">{index + 1}. {creatorsProject} </p>)\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {ProjectList, ProjectDetail}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst TODOItem = ({TODO, delete_TODO}) => {\r\n    return (\r\n        <tr>\r\n            <td>{TODO.body}</td>\r\n            <td>{TODO.creatorKeep}</td>\r\n            <td>{TODO.project}</td>\r\n            <td>{TODO.created}</td>\r\n            <td>{TODO.modified}</td>\r\n            <td>{TODO.isActive ? 'Активна' : 'Закрыта'}</td>\r\n            <td>\r\n                <button className={\"btn btn-secondary\"} onClick={() => delete_TODO(TODO.uid)} type='button'>Удалить\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst TODOList = ({TODOs, delete_TODO}) => {\r\n    return (\r\n        <div className={\"container mb-4\"}>\r\n            <table className=\"table table-hover mt-3\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Текст заметки</th>\r\n                    <th>Создатель заметки</th>\r\n                    <th>Проект</th>\r\n                    <th>Создана</th>\r\n                    <th>Изменена</th>\r\n                    <th>Статус</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Array.isArray(TODOs) ? TODOs.map((TODO) => <TODOItem TODO={TODO} delete_TODO={delete_TODO}\r\n                                                                      key={TODO.uid}/>) : null}\r\n                </tbody>\r\n            </table>\r\n            <button className={\"btn btn-secondary\"}>\r\n                <Link to=\"/TODOs/create\" className={\"text-decoration-none text-white\"}>Создать заметку</Link></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TODOList\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"mt-3 py-3 \">\r\n            <div className=\"container\">\r\n                <span className=\"text-muted\">TODO project DRF</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction NavbarItem({name, href}) {\r\n    return (\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={href}>{name}</Link>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default function Navbar({navbarItems, auth, logout}) {\r\n    let login_button = ''\r\n    if (auth.is_login) {\r\n        login_button = <button className=\"btn btn btn-secondary my-2 my-sm-0\"\r\n                               onClick={logout}>Приветствуем, {auth.username}! Хотите выйти?</button>\r\n    } else {\r\n        login_button = <Link to='/login' className=\"btn btn btn-secondary my-2 my-sm-0\">Войти</Link>\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">Arseny Chistyakov</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                    aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {navbarItems.map((item) => <NavbarItem name={item.name} href={item.href} key={item.href}/>)}\r\n                </ul>\r\n                <form className=\"form-inline mt-2 mt-md-0\">\r\n                    {login_button}\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import {useLocation} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction NotFound404() {\r\n    let pageLocation = useLocation()\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='mt-4 text-lg-center'>Страница по адресу '{pageLocation.pathname}' не найдена</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound404","import React from 'react'\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {login: '', password: ''}\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.login(this.state.login, this.state.password)\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <div className=\"row justify-content-center p-5\">\r\n                        <div className=\"col-lg-5\">\r\n                            <div className={\"card shadow-lg border-0 rounded-lg mt-5\"}>\r\n                                <div className=\"card-header\"><h3\r\n                                    className=\"text-center font-weight-light my-4\">Авторизация</h3></div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"small mb-1\" htmlFor=\"login\">Логин</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"login\"\r\n                                               value={this.state.login}\r\n                                               onChange={(event) => this.handleChange(event)}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"small mb-1\" htmlFor=\"password\">Пароль</label>\r\n                                        <input type=\"password\" className=\"form-control\" name=\"password\"\r\n                                               value={this.state.password}\r\n                                               onChange={(event) => this.handleChange(event)}/>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-secondary\" value=\"Авторизоваться\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm\r\n","import React from \"react\";\r\n\r\nclass ProjectCreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {name: '', creatorsProject: [], repository: ''}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCreatorsProjectChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            this.setState({\r\n                'creatorsProject': []\r\n            })\r\n            return;\r\n        }\r\n        let creatorsProject = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            creatorsProject.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({'creatorsProject': creatorsProject})\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.create_project(this.state.name, this.state.creatorsProject, this.state.repository)\r\n        window.location.href = '/projects';\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div className={\"d-flex justify-content-center\"}>\r\n                    <div className={\"card shadow-lg border-0 rounded-lg mt-5\"}>\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"text-center font-weight-light my-4\">______Создание проекта______</h3>\r\n                        </div>\r\n                        <div className={\"card-body\"}>\r\n                            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0\"}>Введите название проекта</label>\r\n                                    <input className={\"form-control\"} type=\"text\" name=\"name\"\r\n                                           placeholder=\"Название\"\r\n                                           value={this.state.name}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Введите ссылку на репозитории</label>\r\n                                    <input className={\"form-control\"} type=\"text\" name=\"repository\"\r\n                                           placeholder=\"Репозитории\" value={this.state.repository}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Выберете участника(ов) проекта</label>\r\n                                    <select className={\"form-control\"} name=\"creatorsProject\" multiple\r\n                                            onChange={(event) => this.handleCreatorsProjectChange(event)}>\r\n                                        {this.props.creatorsProject.map((item) => <option\r\n                                            value={item.uid}>{item.username}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                                <input className={\"btn btn-secondary mt-1\"} type=\"submit\" value=\"Добавить\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectCreateForm","import React from \"react\";\r\n\r\nclass ProjectUpdateForm extends React.Component {\r\n    num = window.location.href\r\n    projectUid = this.num.replace(/\\/$/, '').split('/').splice(-1, 1)[0];\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {uid: this.projectUid, name: '', repository: '', creatorsProject: []}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props !== nextProps) {\r\n            this.setState(nextProps);\r\n        }\r\n        let projectList = nextProps.project\r\n        let updateState\r\n        projectList.forEach((project) => {\r\n            if (project.uid === this.projectUid) {\r\n                return updateState = {\r\n                    'name': project.name,\r\n                    'repository': project.repository,\r\n                    'creatorsProject': project.creatorsProject\r\n                }\r\n            }\r\n        })\r\n        this.setState(updateState)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCreatorsProjectChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            this.setState({\r\n                'creatorsProject': []\r\n            })\r\n            return;\r\n        }\r\n        let creatorsProject = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            creatorsProject.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({'creatorsProject': creatorsProject})\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.update_project(this.state.uid, this.state.name, this.state.creatorsProject, this.state.repository)\r\n        window.location.href = '/projects';\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div className={\"d-flex justify-content-center\"}>\r\n                    <div className={\"card shadow-lg border-0 rounded-lg mt-5\"}>\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"text-center font-weight-light my-4\">______Обновление проекта______</h3>\r\n                        </div>\r\n                        <div className={\"card-body\"}>\r\n                            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0\"}>Измените название проекта</label>\r\n                                    <input className={\"form-control\"} type=\"text\" name=\"name\"\r\n                                           placeholder=\"Название\"\r\n                                           value={this.state.name}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Измените ссылку на репозитории</label>\r\n                                    <input className={\"form-control\"} type=\"text\" name=\"repository\"\r\n                                           placeholder=\"Репозитории\" value={this.state.repository}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Выберете участника(ов) проекта</label>\r\n                                    <select className={\"form-control\"} name=\"creatorsProject\" multiple\r\n                                            onChange={(event) => this.handleCreatorsProjectChange(event)}>\r\n                                        {this.props.creatorsProject.map((item) => <option\r\n                                            value={item.uid}>{item.username}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                                <label className={\"form-text text-muted\"}>*перед изменением, следует обязательно\r\n                                    выбрать создателей</label>\r\n                                <input className={\"btn btn-secondary mt-1\"} type=\"submit\" value=\"Изменить\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectUpdateForm","import React from \"react\";\r\n\r\nclass TODOCreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {body: '', creatorKeep: '', project: ''}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.create_TODO(this.state.body, this.state.creatorKeep, this.state.project)\r\n        window.location.href = '/TODOs';\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <div className={\"d-flex justify-content-center\"}>\r\n                    <div className={\"card shadow-lg border-0 rounded-lg mt-5\"}>\r\n                        <div className={\"card-header\"}>\r\n                            <h3 className={\"text-center font-weight-light my-4\"}>______Создание заметки______</h3>\r\n                        </div>\r\n                        <div className={\"card-body\"}>\r\n                            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0\"}>Введите содержимое заметки</label>\r\n                                    <input className={\"form-control\"} type=\"text\" name=\"body\" placeholder=\"Текст\"\r\n                                           value={this.state.body}\r\n                                           onChange={(event) => this.handleChange(event)}/>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Выберете проект</label>\r\n                                    <select className={\"form-control\"} name=\"project\"\r\n                                            onChange={(event) => this.handleChange(event)}>{this.props.project.map((item) =>\r\n                                        <option value={item.uid}>{item.name}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <label className={\"mb-0 mt-1\"}>Выберете создателя заметки</label>\r\n                                    <select className={\"form-control\"} name=\"creatorKeep\"\r\n                                            onChange={(event) => this.handleChange(event)}>\r\n                                        {this.props.creatorKeep.map((item) => <option\r\n                                            value={item.uid}>{item.username}</option>)}\r\n                                    </select>\r\n                                </div>\r\n                                <label className={\"form-text text-muted\"}>*перед добавлением, следует обязательно\r\n                                    выбрать все поля</label>\r\n                                <input className={\"btn btn-secondary mt-1\"} type=\"submit\" value=\"Добавить\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TODOCreateForm","import React from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\r\n\r\nimport './bootstrap-css/bootstrap-css.min.css'\r\nimport './bootstrap-css/sticky-footer-navbar.css'\r\nimport './App.css';\r\nimport UserList from \"./components/User\";\r\nimport {ProjectDetail, ProjectList} from './components/Project.js'\r\nimport TODOList from \"./components/TODO\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Menu\";\r\nimport NotFound404 from \"./components/NotFound404\";\r\nimport LoginForm from \"./components/Auth\";\r\nimport ProjectCreateForm from \"./components/ProjectCreateForm\";\r\nimport ProjectUpdateForm from \"./components/ProjectUpdateForm\";\r\nimport TODOCreateForm from \"./components/TODOCreateForm\";\r\n\r\nconst DOMAIN = 'http://127.0.0.1:8000/api/'\r\nconst get_url = (url) => `${DOMAIN}${url}`\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navbarItems: [\r\n                {name: 'Users', href: '/'},\r\n                {name: 'TODOs', href: '/TODOs'},\r\n                {name: 'Projects', href: '/projects'},\r\n            ],\r\n            users: [],\r\n            projects: [],\r\n            TODOs: [],\r\n            auth: {username: '', is_login: false}\r\n        }\r\n    }\r\n\r\n    create_project(name, creatorsProject, repository) {\r\n        let headers = this.get_headers()\r\n        const data = {name: name, creatorsProject: creatorsProject, repository: repository}\r\n        axios.post(get_url(`projects/`), data, {headers}).then(response => {\r\n            this.load_data()\r\n        }).catch(error => {\r\n            console.log(error)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    update_project(uid, name, creatorsProject, repository) {\r\n        let headers = this.get_headers()\r\n        const data = {uid: uid, name: name, creatorsProject: creatorsProject, repository: repository}\r\n        console.log(data)\r\n        axios.put(get_url(`projects/${uid}/`), data, {headers})\r\n            .then(response => {\r\n                this.load_data()\r\n            }).catch(error => {\r\n            console.log(error)\r\n            this.setState({\r\n                projects: []\r\n            })\r\n        })\r\n    }\r\n\r\n    delete_project(uid) {\r\n        let headers = this.get_headers()\r\n        axios.delete(get_url(`projects/${uid}/`), {headers}).then(response => {\r\n            this.load_data()\r\n        }).catch(error => {\r\n            console.log(error)\r\n            this.setState({projects: []})\r\n        })\r\n    }\r\n\r\n    create_TODO(body, creatorKeep, project) {\r\n        const headers = this.get_headers()\r\n        const data = {body: body, creatorKeep: creatorKeep, project: project}\r\n        axios.post(get_url(`TODOs/`), data, {headers}).then(response => {\r\n            this.load_data()\r\n        }).catch(error => {\r\n            console.log(error)\r\n            this.setState({TODOs: []})\r\n        })\r\n    }\r\n\r\n    delete_TODO(uid) {\r\n        let headers = this.get_headers()\r\n        axios.delete(get_url(`TODOs/${uid}/`), {headers}).then(response => {\r\n            this.load_data()\r\n        }).catch(error => {\r\n            console.log(error)\r\n            this.setState({TODOs: []})\r\n        })\r\n    }\r\n\r\n    get_headers() {\r\n        let headers = {\r\n            'Content-Type': 'application/json',\r\n        }\r\n        if (this.state.auth.is_login) {\r\n            const token = localStorage.getItem('access')\r\n            headers['Authorization'] = 'Bearer ' + token\r\n        }\r\n        return headers\r\n    }\r\n\r\n    login(username, password) {\r\n        axios.post(get_url('token/'), {username: username, password: password})\r\n            .then(response => {\r\n                const result = response.data\r\n                const access = result.access\r\n                const refresh = result.refresh\r\n                localStorage.setItem('login', username)\r\n                localStorage.setItem('access', access)\r\n                localStorage.setItem('refresh', refresh)\r\n                this.setState({'auth': {username: username, is_login: true}})\r\n                this.load_data()\r\n            }).catch(error => {\r\n            if (error.response.status === 401) {\r\n                alert('Неверный логин или пароль')\r\n            } else {\r\n                console.log(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    logout() {\r\n        localStorage.setItem('login', '')\r\n        localStorage.setItem('access', '')\r\n        localStorage.setItem('refresh', '')\r\n        this.setState({'auth': {username: '', is_login: false}})\r\n    }\r\n\r\n    load_data() {\r\n        let headers = this.get_headers()\r\n        axios.get(get_url('users/'), {headers})\r\n            .then(response => {\r\n                this.setState({users: response.data.results})\r\n            }).catch(error =>\r\n            console.log(error)\r\n        )\r\n\r\n        axios.get(get_url('projects/'), {headers})\r\n            .then(response => {\r\n                this.setState({projects: response.data.results})\r\n            }).catch(error => console.log(error))\r\n\r\n        axios.get(get_url('TODOs/'), {headers})\r\n            .then(response => {\r\n                this.setState({TODOs: response.data.results})\r\n            }).catch(error =>\r\n            console.log(error)\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const username = localStorage.getItem('login')\r\n        if ((username !== \"\") && (username != null)) {\r\n            this.setState({'auth': {username: username, is_login: true}}, () => this.load_data())\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <BrowserRouter>\r\n                    <header>\r\n                        <Navbar navbarItems={this.state.navbarItems} auth={this.state.auth}\r\n                                logout={() => this.logout()}/>\r\n                    </header>\r\n                    <main role=\"main\" className=\"flex-shrink-0\">\r\n                        <Routes>\r\n                            <Route exact path='/login' element={<LoginForm\r\n                                login={(username, password) => this.login(username, password)}/>}/>\r\n                            <Route exact path='/' element={<UserList users={this.state.users}/>}/>\r\n                            <Route exact path='/users' element={<UserList users={this.state.users}/>}/>\r\n                            <Route exact path='/TODOs' element={<TODOList TODOs={this.state.TODOs}\r\n                                                                          delete_TODO={(uid) => this.delete_TODO(uid)}/>}/>\r\n                            <Route path=\"/TODOs/create\" element={<TODOCreateForm creatorKeep={this.state.users}\r\n                                                                                 project={this.state.projects}\r\n                                                                                 create_TODO={(body, creatorKeep, project) => this.create_TODO(body, creatorKeep, project)}/>}></Route>\r\n                            <Route path='/projects' element={<ProjectList projects={this.state.projects}\r\n                                                                          update_project={(uid) => this.update_project(uid)}\r\n                                                                          delete_project={(uid) => this.delete_project(uid)}/>}/>\r\n                            <Route path='/projects/:id' element={<ProjectDetail projects={this.state.projects}/>}/>\r\n                            <Route exact path='/projects/create'\r\n                                   element={<ProjectCreateForm creatorsProject={this.state.users}\r\n                                                               create_project={(name, creatorsProject, repository) => this.create_project(name, creatorsProject, repository)}/>}/>\r\n                            <Route exact path='/projects/update/:uid'\r\n                                   element={<ProjectUpdateForm creatorsProject={this.state.users}\r\n                                                               project={this.state.projects}\r\n                                                               update_project={(uid, name, creatorsProject, repository, project) => this.update_project(uid, name, creatorsProject, repository, project)}/>}/>\r\n                            <Route path=\"*\" element={<NotFound404/>}/>\r\n                        </Routes>\r\n                    </main>\r\n                    <Footer/>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}